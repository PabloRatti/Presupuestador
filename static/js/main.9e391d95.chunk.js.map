{"version":3,"sources":["logoCanet.png","logoCanetBlanco.png","Components/Form.jsx","App.js","reportWebVitals.js","index.js"],"names":["Form","props","state","cliente","item","unidades","valor","subtotal","totalUnidades","totalMateriales","totalManoDeObra","items","pdfGenerateor","bind","agregarItem","controlarPosicionFooter","deleteItem","event","indiceAeliminar","itemToDeleteName","actualItems","this","unidadesARestar","i","length","nombre","console","log","splice","nuevaCantidadDeUnidades","parseInt","setState","doc","jsPDF","today","Date","newBody","montoTotal","img","Image","src","logoBlanco","date","getDate","getMonth","getFullYear","text","autoTable","html","addImage","map","itemTabla","push","headerStyles","fontStyle","textColor","fillColor","startY","head","body","save","footerMsg","addPage","setPage","parseFloat","newItems","e","totalP","gettotalMateriales","MyForm","className","logo","alt","type","value","onChange","target","onClick","id","React","Component","styled","div","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9e391d95.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logoCanet.e1f22584.png\";","export default __webpack_public_path__ + \"static/media/logoCanetBlanco.d84bbd24.png\";","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { jsPDF } from \"jspdf\";\r\nimport 'jspdf-autotable'\r\nimport logo from '../logoCanet.png';\r\nimport logoBlanco from '../logoCanetBlanco.png';\r\nexport default class Form extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n\r\n            cliente: '',\r\n            item: '',\r\n            unidades: '',\r\n            valor: '',\r\n            subtotal: '',\r\n            totalUnidades: 0,\r\n            totalMateriales: 0,\r\n            totalManoDeObra: '',\r\n            items: []\r\n        }\r\n        this.pdfGenerateor = this.pdfGenerateor.bind(this);\r\n        this.agregarItem = this.agregarItem.bind(this);\r\n        this.controlarPosicionFooter = this.controlarPosicionFooter.bind(this);\r\n        this.deleteItem = this.deleteItem.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        /*\r\n         let aux = [];\r\n         for (let i = 0; i < 26; i++) {\r\n             aux.push({\r\n                 nombre: 'Item de madera laqueada n3' + i,\r\n                 unidades: 100,\r\n                 valor: 10,\r\n                 subtotal : 100 *10\r\n             });\r\n         }\r\n         this.setState({ items: [...aux],totalMateriales: 5000,totalUnidades:500});\r\n */\r\n    }\r\n\r\n    deleteItem(event) {\r\n\r\n\r\n\r\n        let itemToDeleteName = event;\r\n        let actualItems = [...this.state.items];\r\n        let indiceAeliminar;\r\n        let unidadesARestar = 0;\r\n        for (var i = 0; i < actualItems.length; i++) {\r\n            if (actualItems[i].nombre === itemToDeleteName) {\r\n                console.log('Item found!');\r\n                console.log(actualItems[i]);\r\n                indiceAeliminar = i;\r\n                unidadesARestar = actualItems[i].unidades;\r\n\r\n            }\r\n        }\r\n        console.log('Deleting index : ' + indiceAeliminar);\r\n        actualItems.splice(indiceAeliminar, 1);\r\n\r\n        let nuevaCantidadDeUnidades = parseInt(this.state.totalUnidades) - parseInt(unidadesARestar);\r\n        console.log('Nueva unidades : ' + nuevaCantidadDeUnidades);\r\n        this.setState({ items: [...actualItems], totalUnidades: nuevaCantidadDeUnidades });\r\n\r\n    }\r\n\r\n    pdfGenerateor() {\r\n\r\n        console.log(this.state);\r\n\r\n        var doc = new jsPDF('landscape');\r\n\r\n        var today = new Date();\r\n        let newBody = [];\r\n        let montoTotal = 0;\r\n        var img = new Image();\r\n        img.src = logoBlanco;\r\n\r\n        var date = today.getDate() + '/' + (today.getMonth() + 1) + '/' + today.getFullYear();\r\n        doc.text(20, 20, 'Mauro Canet realizaciones : 2234-261271');\r\n        doc.text(20, 30, 'E-mail : mcrealizaciones@gmail.com');\r\n\r\n        doc.text(20, 40, 'Dirigido a : ' + this.state.cliente);\r\n        doc.text(160, 20, date);\r\n        doc.text(160, 30, 'Mar del plata');\r\n        doc.autoTable({ html: '#my-table' })\r\n        doc.addImage(img, 'png', 220, 10, 60, 35)\r\n        this.state.items.map((item) => {\r\n\r\n            let itemTabla = [item.nombre, item.unidades, '$' + item.valor, '$' + item.subtotal];\r\n            newBody.push(itemTabla);\r\n            montoTotal = montoTotal + (item.unidades * item.valor);\r\n\r\n\r\n            return null;\r\n        });\r\n        //let footer = ['TOTAL','200','$25000'];\r\n        //newBody.push(footer);\r\n\r\n        doc.autoTable({\r\n            headerStyles: { fontStyle: 'bold', textColor: 20, fillColor: [255, 248, 83] },\r\n            startY: 50,\r\n            head: [['Item', 'Cantidad', 'P.Unitario', 'Subtotal']],\r\n            body: [...newBody]//[['David', 'david@example.com', 'Sweden'],['Castille', 'castille@example.com', 'Spain'],],\r\n\r\n        })\r\n\r\n        this.controlarPosicionFooter(doc, montoTotal);\r\n\r\n        doc.save('Presupuesto ' + this.state.cliente + '.pdf');\r\n\r\n    }\r\n\r\n    controlarPosicionFooter(doc, montoTotal) {\r\n        let footerMsg = 'Presupuesto válido por 7 días, para la realización del trabajo es necesaria una seña del 50% del presupuesto.';\r\n        if (this.state.items.length <= 13) {\r\n            console.log('In condition 2');\r\n            doc.text(15, 170, 'Total  en materiales : $' + montoTotal);\r\n            doc.text(15, 180, 'Mano de obra : $' + this.state.totalManoDeObra);\r\n            doc.text(15, 190, 'Total : $' + (parseInt(montoTotal) + parseInt(this.state.totalManoDeObra)));\r\n            doc.text(15, 200, footerMsg);\r\n        }\r\n\r\n        if (this.state.items.length > 13 && this.state.items.length <= 18) {\r\n            console.log('In condition 2');\r\n            doc.addPage();\r\n            doc.setPage(2);\r\n            doc.text(15, 10, 'Total  en materiales : $' + montoTotal);\r\n            doc.text(15, 20, 'Mano de obra : $' + this.state.totalManoDeObra);\r\n            doc.text(15, 30, 'Total : $' + (parseInt(montoTotal) + parseInt(this.state.totalManoDeObra)));\r\n            doc.text(15, 40, footerMsg);\r\n        }\r\n        if (this.state.items.length > 18) {\r\n\r\n            doc.setPage(2);\r\n            doc.text(15, 170, 'Total  en materiales : $' + montoTotal);\r\n            doc.text(15, 180, 'Mano de obra : $' + this.state.totalManoDeObra);\r\n            doc.text(15, 190, 'Total : $' + (parseInt(montoTotal) + parseInt(this.state.totalManoDeObra)));\r\n            doc.text(15, 200, footerMsg);\r\n        }\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n    agregarItem() {\r\n        try {\r\n            if (this.state.item) {\r\n                let item = {\r\n                    nombre: this.state.item,\r\n                    unidades: this.state.unidades,\r\n                    valor: this.state.valor,\r\n                    subtotal: this.state.unidades * this.state.valor\r\n                }\r\n                let totalUnidades = parseInt(this.state.totalUnidades) + parseInt(item.unidades);\r\n                let totalMateriales = parseFloat(this.state.totalMateriales) + (parseFloat(item.valor) * parseInt(item.unidades));\r\n                let newItems = [...this.state.items];\r\n                newItems.push(item);\r\n\r\n                this.setState({\r\n                    items: [...newItems],\r\n                    totalMateriales: totalMateriales,\r\n                    totalUnidades: totalUnidades,\r\n                    totalManoDeObra: this.state.totalManoDeObra,\r\n                    item: '',\r\n                    valor: '',\r\n                    unidades: '',\r\n                    subtotal: ''\r\n                })\r\n                /*\r\n                this.setState((prevState) => {\r\n                    return {\r\n                        items: prevState.items.concat(item),\r\n                        totalMateriales: totalMateriales,\r\n                        totalUnidades: totalUnidades,\r\n                        item: '',\r\n                        valor: '',\r\n                        unidades: ''\r\n    \r\n                    };\r\n                });*/\r\n            }\r\n        } catch (e) {\r\n            console.log('Errror catched')\r\n            console.log(e);\r\n        }\r\n    }\r\n\r\n    gettotalMateriales() {\r\n        let montoTotal = 0;\r\n        this.state.items.map((item) => {\r\n            montoTotal = montoTotal + (item.unidades * item.valor);\r\n            return null;\r\n        });\r\n\r\n        return montoTotal;\r\n    }\r\n    render() {\r\n        let totalP = this.gettotalMateriales();\r\n        return (\r\n            <MyForm>\r\n                <img className=\"img\" src={logo} alt=\"logo\" />\r\n                <div className=\"container\">\r\n\r\n                    <h1 className=\"label\">Cotizador</h1>\r\n                    <table className=\"dataTable\">\r\n                        <tbody>\r\n                            <tr>\r\n                                <th>Cliente : </th>\r\n                                <th><input type=\"text\" value={this.state.cliente} onChange={(event) => { this.setState({ cliente: event.target.value }) }} ></input></th>\r\n                            </tr>\r\n                            <tr>\r\n                                <th>Item : </th>\r\n                                <th><input type=\"text\" value={this.state.item} onChange={(event) => { this.setState({ item: event.target.value }) }} ></input></th>\r\n                            </tr>\r\n                            <tr>\r\n                                <th>Unidades : </th>\r\n                                <th><input type=\"number\" value={this.state.unidades} onChange={(event) => { this.setState({ unidades: event.target.value }) }} ></input></th>\r\n                            </tr>\r\n                            <tr>\r\n                                <th>P.unitario : </th>\r\n                                <th><input type=\"number\" value={this.state.valor} onChange={(event) => { this.setState({ valor: event.target.value }) }} ></input></th>\r\n                            </tr>\r\n                            <tr>\r\n                                <th>Mano de obra : </th>\r\n                                <th><input type=\"number\" value={this.state.totalManoDeObra} onChange={(event) => { this.setState({ totalManoDeObra: event.target.value }) }} ></input></th>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n\r\n                    <button className=\"addButton\" onClick={this.agregarItem}>Agregar</button>\r\n                </div>\r\n\r\n                <table id=\"customers\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th className=\"itemName\">Item</th>\r\n                            <th >Cantidad</th>\r\n                            <th >P.unidad</th>\r\n                            <th >Subtotal</th>\r\n                        </tr>\r\n                    </thead>\r\n\r\n                    <tbody>\r\n\r\n                        {this.state.items.map((item) => {\r\n                            return (\r\n\r\n                                <tr className=\"row\" key={item.nombre}>\r\n                                    <td className=\"itemName\">\r\n                                        {/*\r\n                                        <form onSubmit={this.deleteItem}>\r\n                                            <button className=\"deleteButton\" type=\"submit\">{item.nombre}\r\n                                            </button>\r\n                                            <input hidden={true} name=\"itemName\" value={item.nombre} />\r\n                                        </form>*/ }\r\n\r\n                                        <button className=\"deleteButton\" type=\"submit\" onClick={() => this.deleteItem(item.nombre)}>{item.nombre}\r\n                                        </button>\r\n                                        {/* <input hidden={true} name=\"itemName\" value={item.nombre} />*/}\r\n\r\n                                    </td>\r\n                                    <td >{item.unidades}</td>\r\n                                    <td >${item.valor}</td>\r\n                                    <td >${item.subtotal}</td>\r\n                                </tr>\r\n                            )\r\n                        })}\r\n                        <tr>\r\n                            <td className=\"totales\">Totales : </td>\r\n                            <td className=\"totales\">{this.state.totalUnidades}</td>\r\n                            <td className=\"totales\"></td>\r\n                            <td className=\"precioTotal\">${totalP}</td>\r\n\r\n                        </tr>\r\n                    </tbody>\r\n\r\n\r\n                </table>\r\n\r\n                <button className=\"printPdf\" onClick={this.pdfGenerateor} >Descargar PDF</button>\r\n            </MyForm>\r\n        );\r\n    }\r\n}\r\n\r\nconst MyForm = styled.div`\r\n    text-align: center;\r\n    \r\n   \r\n    min-height: 40rem;\r\n    min-width: 100%;\r\n    max-width: 10rem;\r\n    border-radius: 3rem;\r\n.row{\r\n    font-weight:bold;\r\n}\r\n    .inputName{\r\n        text-align: center;\r\n        font-size: calc(8px + 2vmin);\r\n        background-color: #7398b6;\r\n        border: 0px solid #7398b6;\r\n    }\r\n   button{\r\n    background-color: rgb(255,249,80);\r\n    \r\n   }\r\n   .deleteButton{\r\n       width: 100%;\r\n       height:100%;\r\n       background-color: #7398b6;\r\n       border-color: #7398b6;\r\n       padding: 0;\r\n       border: none;\r\n       background: none;\r\n       font-weight:bold;\r\n   }\r\n    .img{\r\n        width: 100%;\r\n        height: 18rem;\r\n        position:relative;\r\n        \r\n    }\r\n    .totales{\r\n        font-weight: bold;\r\n    }\r\n    .precioTotal{\r\n        color: green;\r\n        font-weight: bold;\r\n    }\r\n   \r\n    .label{\r\n        color:white;        \r\n    }\r\n    .input{\r\n        border-radius:2rem;\r\n        \r\n    }\r\n    table{\r\n        width: 100%;\r\n    }\r\n   \r\n      tbody{\r\n          width:100%;\r\n       \r\n      }\r\n      \r\n     \r\n      .itemName{\r\n          overflow: hidden;\r\n          color: red;\r\n          border: 1px solid #dddddd;\r\n          text-align: center;\r\n          padding: 8px;\r\n          max-width: 10rem;\r\n          font-weight:bold;\r\n          \r\n         \r\n      }\r\n      .addButton{\r\n          margin-top: 2rem;\r\n          margin-bottom: 2rem;\r\n          border: 2px solid black;\r\n          border-radius: 2rem;\r\n          height:3rem;\r\n          width: 50%;\r\n      }\r\n\r\n      .printPdf{\r\n        margin-top: 2rem;\r\n        margin-bottom: 2rem;\r\n        border: 2px solid black;\r\n        border-radius: 2rem;\r\n        height:3rem;\r\n        width: 50%;\r\n      }\r\n\r\n      #customers {\r\n        font-family: Arial, Helvetica, sans-serif;\r\n        border-collapse: collapse;\r\n        width: 100%;\r\n      }\r\n      \r\n      #customers td, #customers th {\r\n        border: 1px solid #ddd;\r\n        padding: 8px;\r\n        \r\n      }\r\n      \r\n    \r\n      \r\n      #customers tr:hover {background-color: #ddd;}\r\n      \r\n      #customers th {\r\n        padding-top: 12px;\r\n        padding-bottom: 12px;\r\n        text-align: center;\r\n        background-color: black;\r\n        color: white;\r\n      }\r\n\r\n      @media (min-width: 48em) {\r\n      \r\n        .img{\r\n            width: 40%;          \r\n            position:relative;\r\n            \r\n        }\r\n        .dataTable{\r\n            max-width:25rem;\r\n         \r\n            margin: 0 auto;\r\n        }\r\n     \r\n    `;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import './App.css';\r\nimport Form from './Components/Form';\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n      <Form/>\r\n      </header>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}