{"version":3,"sources":["logoCanet.png","Components/Form.jsx","App.js","reportWebVitals.js","index.js"],"names":["Form","props","state","array1","cliente","item","unidades","valor","totalUnidades","totalPresupuesto","items","pdfGenerateor","bind","agregarItem","controlarPosicionFooter","deleteItem","event","preventDefault","itemToDeleteName","target","itemName","value","console","log","indiceAeliminar","actualItems","this","i","length","nombre","splice","setState","doc","jsPDF","positionYTotal","today","Date","newBody","montoTotal","img","Image","src","logo","date","getDate","getMonth","getFullYear","text","autoTable","html","addImage","map","itemTabla","push","headerStyles","fontStyle","textColor","fillColor","startY","head","body","save","rowsInSecondPage","addPage","setPage","parseInt","parseFloat","newItems","MyForm","className","alt","type","onChange","onClick","id","onSubmit","hidden","name","React","Component","styled","div","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.574f5bb8.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logoCanet.e1f22584.png\";","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { jsPDF } from \"jspdf\";\r\nimport 'jspdf-autotable'\r\nimport logo from '../logoCanet.png';\r\nexport default class Form extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            array1: [],\r\n            cliente: '',\r\n            item: '',\r\n            unidades: '',\r\n            valor: '',\r\n            totalUnidades: 0,\r\n            totalPresupuesto: 0,\r\n            items: []\r\n        }\r\n        this.pdfGenerateor = this.pdfGenerateor.bind(this);\r\n        this.agregarItem = this.agregarItem.bind(this);\r\n        this.controlarPosicionFooter = this.controlarPosicionFooter.bind(this);\r\n        this.deleteItem = this.deleteItem.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n       /*\r\n        let aux = [];\r\n        for (let i = 0; i < 5; i++) {\r\n            aux.push({\r\n                nombre: 'Item' + i,\r\n                unidades: 100,\r\n                valor: 155000\r\n            });\r\n        }\r\n        this.setState({ items: [...aux] });\r\n*/\r\n    }\r\n\r\n    deleteItem(event) {\r\n        event.preventDefault();\r\n        \r\n        let itemToDeleteName = event.target.itemName.value;\r\n\r\n        console.log('In delete : ' + itemToDeleteName);\r\n\r\n\r\n        let actualItems = [...this.state.items];\r\n        let indiceAeliminar;\r\n        for (var i = 0; i < actualItems.length; i++) {\r\n            console.log('checking item');\r\n            console.log(actualItems[i].nombre);\r\n            if (actualItems[i].nombre === itemToDeleteName) {\r\n                console.log('Item found!');\r\n                indiceAeliminar = i;\r\n            }\r\n        }\r\n        console.log('Deleting index : ' + indiceAeliminar);\r\n        actualItems.splice(indiceAeliminar, 1);\r\n        console.log(actualItems);\r\n        this.setState({ items: [...actualItems] });\r\n        \r\n    }\r\n\r\n    pdfGenerateor() {\r\n\r\n        var doc = new jsPDF('landscape');\r\n        var positionYTotal = 70;\r\n        var today = new Date();\r\n        let newBody = [];\r\n        let montoTotal = 0;\r\n        var img = new Image();\r\n        img.src = logo;\r\n       \r\n\r\n        var date = today.getDate() + '/' + (today.getMonth() + 1) + '/' + today.getFullYear();\r\n        doc.text(20, 20, 'Mauro Canet realizaciones : 2234-261271');\r\n        doc.text(20, 30, 'E-mail : mcrealizaciones@gmail.com');\r\n\r\n        doc.text(20, 40, 'Presupuesto dirigido a : ' + this.state.cliente);\r\n        doc.text(250, 20, date);\r\n        doc.text(250, 30, 'Mar del plata');\r\n        doc.autoTable({ html: '#my-table' })\r\n        doc.addImage(img, 'png', 160, 10, 60, 35)\r\n        this.state.items.map((item) => {\r\n\r\n            let itemTabla = [item.nombre, item.unidades, item.valor];\r\n            newBody.push(itemTabla);\r\n            montoTotal = montoTotal + (item.unidades * item.valor);\r\n            positionYTotal += 8;\r\n\r\n            return null;\r\n        });\r\n        //let footer = ['TOTAL','200','$25000'];\r\n        //newBody.push(footer);\r\n\r\n        doc.autoTable({\r\n            headerStyles: { fontStyle: 'bold', textColor: 20, fillColor: [255, 248, 83] },\r\n            startY: 50,\r\n            head: [['Item', 'Cantidad', 'Valor']],\r\n            body: [...newBody]//[['David', 'david@example.com', 'Sweden'],['Castille', 'castille@example.com', 'Spain'],],\r\n\r\n        })\r\n\r\n        this.controlarPosicionFooter(doc, montoTotal, positionYTotal);\r\n\r\n\r\n        doc.save('Presupuesto ' + this.state.cliente + '.pdf');\r\n    }\r\n\r\n    controlarPosicionFooter(doc, montoTotal, positionYTotal) {\r\n        let rowsInSecondPage = this.state.items.length - 12;\r\n\r\n        if (this.state.items.length < 17) {\r\n            doc.text(20, positionYTotal, 'Total : $' + montoTotal);\r\n            doc.text(20, positionYTotal + 10, 'Presupuesto válido por 7 días, para la realización del trabajo es necesaria una seña del 50% del presupuesto.');\r\n        }\r\n        if (this.state.items.length === 17) {\r\n            console.log('In condition 2');\r\n            doc.text(20, positionYTotal - 8, 'Total : $' + montoTotal);\r\n            doc.text(20, positionYTotal + 2, 'Presupuesto válido por 7 días, para la realización del trabajo es necesaria una seña del 50% del presupuesto.');\r\n\r\n        }\r\n        if (this.state.items.length === 18) {\r\n            console.log('In condition 2');\r\n            doc.text(20, positionYTotal - 12, 'Total : $' + montoTotal);\r\n            doc.addPage();\r\n            doc.setPage(2);\r\n            doc.text(20, rowsInSecondPage + 2, 'Presupuesto válido por 7 días, para la realización del trabajo es necesaria una seña del 50% del presupuesto.');\r\n\r\n        }\r\n\r\n        if (this.state.items.length >= 19) {\r\n            console.log('In condition 1');\r\n\r\n            doc.setPage(2);\r\n            doc.text(20, rowsInSecondPage * 7, 'Total : $' + montoTotal);\r\n            doc.text(20, (rowsInSecondPage * 7) + 10, 'Presupuesto válido por 7 días, para la realización del trabajo es necesaria una seña del 50% del presupuesto.');\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    agregarItem() {\r\n        if (this.state.item) {\r\n            let item = {\r\n                nombre: this.state.item,\r\n                unidades: this.state.unidades,\r\n                valor: this.state.valor\r\n            }\r\n            let totalUnidades = parseInt(this.state.totalUnidades) + parseInt(item.unidades);\r\n            let totalPresupuesto = parseFloat(this.state.totalPresupuesto) + (parseFloat(item.valor) * parseInt(item.unidades));\r\n            let newItems = [...this.state.items];\r\n            newItems.push(item);\r\n            this.setState({\r\n                items : [...newItems],\r\n                totalPresupuesto: totalPresupuesto,\r\n                totalUnidades: totalUnidades,\r\n                item: '',\r\n                valor: '',\r\n                unidades: ''\r\n            })\r\n            /*\r\n            this.setState((prevState) => {\r\n                return {\r\n                    items: prevState.items.concat(item),\r\n                    totalPresupuesto: totalPresupuesto,\r\n                    totalUnidades: totalUnidades,\r\n                    item: '',\r\n                    valor: '',\r\n                    unidades: ''\r\n\r\n                };\r\n            });*/\r\n        }\r\n\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <MyForm>\r\n                <img className=\"img\" src={logo} alt=\"logo\" />\r\n                <div className=\"container\">\r\n\r\n                    <h1 className=\"label\">Cotizador</h1>\r\n                    <table className=\"dataTable\">\r\n                        <tbody>\r\n                            <tr>\r\n                                <th>Cliente : </th>\r\n                                <th><input type=\"text\" value={this.state.cliente} onChange={(event) => { this.setState({ cliente: event.target.value }) }} ></input></th>\r\n                            </tr>\r\n                            <tr>\r\n                                <th>Item : </th>\r\n                                <th><input type=\"text\" value={this.state.item} onChange={(event) => { this.setState({ item: event.target.value }) }} ></input></th>\r\n                            </tr>\r\n                            <tr>\r\n                                <th>Unidades : </th>\r\n                                <th><input type=\"number\" value={this.state.unidades} onChange={(event) => { this.setState({ unidades: event.target.value }) }} ></input></th>\r\n                            </tr>\r\n                            <tr>\r\n                                <th>Valor : </th>\r\n                                <th><input type=\"number\" value={this.state.valor} onChange={(event) => { this.setState({ valor: event.target.value }) }} ></input></th>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n\r\n                    <button className=\"addButton\" onClick={this.agregarItem}>Agregar</button>\r\n                </div>\r\n\r\n                <table id=\"customers\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th className=\"itemName\">Item</th>\r\n                            <th >Cantidad</th>\r\n                            <th >Valor</th>\r\n                        </tr>\r\n                    </thead>\r\n\r\n                    <tbody>\r\n\r\n                        {this.state.items.map((item) => {\r\n                            return (\r\n                                \r\n                                    <tr className=\"row\">\r\n                                        \r\n                                        <td className=\"itemName\"><form onSubmit={this.deleteItem}> <button className=\"deleteButton\" type=\"submit\">{item.nombre}</button><input hidden=\"true\" name=\"itemName\" value={item.nombre} /></form></td>\r\n                                        <td >{item.unidades}</td>\r\n                                        <td >${item.valor}</td>\r\n                                       \r\n\r\n                                    </tr>\r\n                               \r\n                            )\r\n                        })}\r\n\r\n                        <tr>\r\n                            <td className=\"totales\">Totales : </td>\r\n                            <td className=\"totales\">{this.state.totalUnidades}</td>\r\n                            <td className=\"precioTotal\">${this.state.totalPresupuesto}</td>\r\n                        </tr>\r\n                    </tbody>\r\n\r\n\r\n\r\n                </table>\r\n\r\n                <button className=\"printPdf\" onClick={this.pdfGenerateor} >Descargar PDF</button>\r\n            </MyForm>\r\n        );\r\n    }\r\n}\r\n\r\nconst MyForm = styled.div`\r\n    text-align: center;\r\n    \r\n   \r\n    min-height: 40rem;\r\n    min-width: 100%;\r\n    max-width: 10rem;\r\n    border-radius: 3rem;\r\n.row{\r\n    font-weight:bold;\r\n}\r\n    .inputName{\r\n        text-align: center;\r\n        font-size: calc(8px + 2vmin);\r\n        background-color: #7398b6;\r\n        border: 0px solid #7398b6;\r\n    }\r\n   button{\r\n    background-color: rgb(255,249,80);\r\n    \r\n   }\r\n   .deleteButton{\r\n       width: 100%;\r\n       height:100%;\r\n       background-color: #7398b6;\r\n       border-color: #7398b6;\r\n       padding: 0;\r\n       border: none;\r\n       background: none;\r\n       font-weight:bold;\r\n   }\r\n    .img{\r\n        width: 100%;\r\n        height: 18rem;\r\n        position:relative;\r\n        \r\n    }\r\n    .totales{\r\n        font-weight: bold;\r\n    }\r\n    .precioTotal{\r\n        color: green;\r\n        font-weight: bold;\r\n    }\r\n   \r\n    .label{\r\n        color:white;        \r\n    }\r\n    .input{\r\n        border-radius:2rem;\r\n        \r\n    }\r\n    table{\r\n        width: 100%;\r\n    }\r\n   \r\n      tbody{\r\n          width:100%;\r\n       \r\n      }\r\n      \r\n     \r\n      .itemName{\r\n          overflow: hidden;\r\n          border: 1px solid #dddddd;\r\n          text-align: center;\r\n          padding: 8px;\r\n          max-width: 10rem;\r\n          font-weight:bold;\r\n         \r\n      }\r\n      .addButton{\r\n          margin-top: 2rem;\r\n          margin-bottom: 2rem;\r\n          border: 2px solid black;\r\n          border-radius: 2rem;\r\n          height:3rem;\r\n          width: 50%;\r\n      }\r\n\r\n      .printPdf{\r\n        margin-top: 2rem;\r\n        margin-bottom: 2rem;\r\n        border: 2px solid black;\r\n        border-radius: 2rem;\r\n        height:3rem;\r\n        width: 50%;\r\n      }\r\n\r\n      #customers {\r\n        font-family: Arial, Helvetica, sans-serif;\r\n        border-collapse: collapse;\r\n        width: 100%;\r\n      }\r\n      \r\n      #customers td, #customers th {\r\n        border: 1px solid #ddd;\r\n        padding: 8px;\r\n        \r\n      }\r\n      \r\n    \r\n      \r\n      #customers tr:hover {background-color: #ddd;}\r\n      \r\n      #customers th {\r\n        padding-top: 12px;\r\n        padding-bottom: 12px;\r\n        text-align: center;\r\n        background-color: black;\r\n        color: white;\r\n      }\r\n\r\n      @media (min-width: 48em) {\r\n      \r\n        .img{\r\n            width: 40%;          \r\n            position:relative;\r\n            \r\n        }\r\n        .dataTable{\r\n            max-width:25rem;\r\n         \r\n            margin: 0 auto;\r\n        }\r\n     \r\n    `;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import './App.css';\nimport Form from './Components/Form';\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n      <Form/>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}