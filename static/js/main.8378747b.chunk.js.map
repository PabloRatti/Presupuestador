{"version":3,"sources":["Components/Form.jsx","App.js","reportWebVitals.js","index.js"],"names":["Form","props","state","array1","cliente","item","unidades","valor","totalUnidades","totalPresupuesto","items","pdfGenerateor","bind","agregarItem","controlarPosicionTotal","deleteItem","aux","this","i","push","nombre","setState","event","alert","target","value","doc","jsPDF","positionYTotal","today","Date","newBody","montoTotal","img","Image","src","date","getDate","getMonth","getFullYear","text","autoTable","html","addImage","map","itemTabla","startY","head","body","save","length","console","log","rowsInSecondPage","setPage","parseInt","parseFloat","prevState","concat","MyForm","className","alt","type","onChange","onClick","id","React","Component","styled","div","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8378747b.chunk.js","sourcesContent":["import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { jsPDF } from \"jspdf\";\r\nimport 'jspdf-autotable'\r\nexport default class Form extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            array1: [],\r\n            cliente: '',\r\n            item: '',\r\n            unidades: '',\r\n            valor: '',\r\n            totalUnidades: 0,\r\n            totalPresupuesto: 0,\r\n            items: []\r\n        }\r\n        this.pdfGenerateor = this.pdfGenerateor.bind(this);\r\n        this.agregarItem = this.agregarItem.bind(this);\r\n        this.controlarPosicionTotal = this.controlarPosicionTotal.bind(this);\r\n        this.deleteItem = this.deleteItem.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n        let aux = [...this.state.items];\r\n        for (let i = 0; i < 3; i++) {\r\n            aux.push({\r\n                nombre: 'Item' + i,\r\n                unidades: 100,\r\n                valor: 155000\r\n            });\r\n        }\r\n        this.setState({ items: [...aux] });\r\n\r\n    }\r\n\r\n    deleteItem(event) {\r\n        alert(event.target.value);\r\n    }\r\n\r\n    pdfGenerateor() {\r\n\r\n        var doc = new jsPDF('landscape');\r\n        var positionYTotal = 70;\r\n        var today = new Date();\r\n        let newBody = [];\r\n        let montoTotal = 0;\r\n        var img = new Image()\r\n        img.src = 'logo.jfif'\r\n        var date = today.getDate() + '/' + (today.getMonth() + 1) + '/' + today.getFullYear();\r\n        doc.text(20, 20, 'Mauro Canet : 2234-261271');\r\n        doc.text(20, 30, 'Presupuesto dirigido a : ' + this.state.cliente);\r\n        doc.text(250, 20, date);\r\n        doc.text(250, 30, 'Mar del plata');\r\n        doc.autoTable({ html: '#my-table' })\r\n        doc.addImage(img, 'jfif', 140, 10, 60, 35)\r\n        this.state.items.map((item) => {\r\n\r\n            let itemTabla = [item.nombre, item.unidades, item.valor];\r\n            newBody.push(itemTabla);\r\n            montoTotal = montoTotal + (item.unidades * item.valor);\r\n            positionYTotal += 8;\r\n\r\n            return null;\r\n        });\r\n\r\n        // Or use javascript directly:\r\n        doc.autoTable({\r\n\r\n            startY: 50,\r\n            head: [['Item', 'Cantidad', 'Valor']],\r\n            body: [...newBody]//[['David', 'david@example.com', 'Sweden'],['Castille', 'castille@example.com', 'Spain'],],\r\n        })\r\n\r\n        this.controlarPosicionTotal(doc, montoTotal, positionYTotal);\r\n\r\n\r\n        doc.save('Presupuesto' + this.state.cliente + '.pdf');\r\n    }\r\n\r\n    controlarPosicionTotal(doc, montoTotal, positionYTotal) {\r\n        if (this.state.items.length < 17) {\r\n            doc.text(20, positionYTotal, 'Total : $' + montoTotal);\r\n        }\r\n        if (this.state.items.length === 17) {\r\n            console.log('In condition 2');\r\n            doc.text(20, positionYTotal - 8, 'Total : $' + montoTotal);\r\n        }\r\n        if (this.state.items.length === 18) {\r\n            console.log('In condition 2');\r\n            doc.text(20, positionYTotal - 12, 'Total : $' + montoTotal);\r\n        }\r\n\r\n        if (this.state.items.length >= 19) {\r\n            console.log('In condition 1');\r\n            let rowsInSecondPage = this.state.items.length - 12;\r\n            doc.setPage(2);\r\n            doc.text(20, rowsInSecondPage * 7, 'Total : $' + montoTotal);\r\n        }\r\n\r\n\r\n    }\r\n\r\n    agregarItem() {\r\n        if (this.state.item) {\r\n            let item = {\r\n                nombre: this.state.item,\r\n                unidades: this.state.unidades,\r\n                valor: this.state.valor\r\n            }\r\n            let totalUnidades = parseInt(this.state.totalUnidades) + parseInt(item.unidades);\r\n            let totalPresupuesto = parseFloat(this.state.totalPresupuesto) + (parseFloat(item.valor) * parseInt(item.unidades));\r\n            this.setState((prevState) => {\r\n                return {\r\n                    items: prevState.items.concat(item),\r\n                    totalPresupuesto: totalPresupuesto,\r\n                    totalUnidades: totalUnidades\r\n\r\n                };\r\n            });\r\n        }\r\n\r\n        /*                  item: '',\r\n                            valor: '',\r\n                            unidades: '' */\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <MyForm>\r\n                <img className=\"img\" src=\"logo.jfif\" alt=\"logo\" />\r\n                <div className=\"container\">\r\n\r\n                    <h1 className=\"label\">Presupuestador</h1>\r\n                    <table className=\"dataTable\">\r\n                        <tbody>\r\n                            <tr>\r\n                                <th>Cliente : </th>\r\n                                <th><input type=\"text\" value={this.state.cliente} onChange={(event) => { this.setState({ cliente: event.target.value }) }} ></input></th>\r\n                            </tr>\r\n                            <tr>\r\n                                <th>Item : </th>\r\n                                <th><input type=\"text\" value={this.state.item} onChange={(event) => { this.setState({ item: event.target.value }) }} ></input></th>\r\n                            </tr>\r\n                            <tr>\r\n                                <th>Unidades : </th>\r\n                                <th><input type=\"number\" value={this.state.unidades} onChange={(event) => { this.setState({ unidades: event.target.value }) }} ></input></th>\r\n                            </tr>\r\n                            <tr>\r\n                                <th>Valor : </th>\r\n                                <th><input type=\"number\" value={this.state.valor} onChange={(event) => { this.setState({ valor: event.target.value }) }} ></input></th>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n\r\n                    <button className=\"addButton\" onClick={this.agregarItem}>Agregar</button>\r\n                </div>\r\n\r\n                <table id=\"customers\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th className=\"itemName\">Item</th>\r\n                            <th >Cantidad</th>\r\n                            <th >Valor</th>\r\n                        </tr>\r\n                    </thead>\r\n\r\n                    <tbody>\r\n\r\n                        {this.state.items.map((item) => {\r\n                            return (\r\n                                <tr >\r\n                                    <td className=\"itemName\" onClick={this.deleteItem} value={item.nombre}>{item.nombre}</td>\r\n                                    <td >{item.unidades}</td>\r\n                                    <td >${item.valor}</td>\r\n                                </tr>\r\n                            )\r\n                        })}\r\n\r\n                        <tr>\r\n                            <td className=\"totales\">Totales : </td>\r\n                            <td className=\"totales\">{this.state.totalUnidades}</td>\r\n                            <td className=\"precioTotal\">${this.state.totalPresupuesto}</td>\r\n                        </tr>\r\n                    </tbody>\r\n\r\n\r\n\r\n                </table>\r\n\r\n                <button className=\"printPdf\" onClick={this.pdfGenerateor} >Descargar PDF</button>\r\n            </MyForm>\r\n        );\r\n    }\r\n}\r\n\r\nconst MyForm = styled.div`\r\n    text-align: center;\r\n    \r\n   \r\n    min-height: 40rem;\r\n    min-width: 100%;\r\n    max-width: 10rem;\r\n    border-radius: 3rem;\r\n   button{\r\n    background-color: #4CAF50;\r\n   }\r\n    .img{\r\n        width: 100%;\r\n        height: 18rem;\r\n        position:relative;\r\n        \r\n    }\r\n    .totales{\r\n        font-weight: bold;\r\n    }\r\n    .precioTotal{\r\n        color: green;\r\n        font-weight: bold;\r\n    }\r\n   \r\n    .label{\r\n        color:white;        \r\n    }\r\n    .input{\r\n        border-radius:2rem;\r\n        \r\n    }\r\n    table{\r\n        width: 100%;\r\n    }\r\n   \r\n      tbody{\r\n          width:100%;\r\n       \r\n      }\r\n      \r\n     \r\n      .itemName{\r\n          overflow: hidden;\r\n          border: 1px solid #dddddd;\r\n          text-align: center;\r\n          padding: 8px;\r\n          max-width: 10rem;\r\n         \r\n      }\r\n      .addButton{\r\n          margin-top: 2rem;\r\n          margin-bottom: 2rem;\r\n          border: 2px solid black;\r\n          border-radius: 2rem;\r\n          height:3rem;\r\n          width: 50%;\r\n      }\r\n\r\n      .printPdf{\r\n        margin-top: 2rem;\r\n        margin-bottom: 2rem;\r\n        border: 2px solid black;\r\n        border-radius: 2rem;\r\n        height:3rem;\r\n        width: 50%;\r\n      }\r\n\r\n      #customers {\r\n        font-family: Arial, Helvetica, sans-serif;\r\n        border-collapse: collapse;\r\n        width: 100%;\r\n      }\r\n      \r\n      #customers td, #customers th {\r\n        border: 1px solid #ddd;\r\n        padding: 8px;\r\n        \r\n      }\r\n      \r\n    \r\n      \r\n      #customers tr:hover {background-color: #ddd;}\r\n      \r\n      #customers th {\r\n        padding-top: 12px;\r\n        padding-bottom: 12px;\r\n        text-align: left;\r\n        background-color: black;\r\n        color: white;\r\n      }\r\n\r\n      @media (min-width: 48em) {\r\n      \r\n        .img{\r\n            width: 40%;          \r\n            position:relative;\r\n            \r\n        }\r\n        .dataTable{\r\n            max-width:25rem;\r\n         \r\n            margin: 0 auto;\r\n        }\r\n     \r\n    `;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import './App.css';\nimport Form from './Components/Form';\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n      <Form/>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}